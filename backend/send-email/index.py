import json
import smtplib
import os
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from typing import Dict, Any

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: Send email with order confirmation and ticket details
    Args: event with httpMethod, body containing recipient email, order details
          context with request_id
    Returns: HTTP response with success/error status
    '''
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': 'Method not allowed'})
        }
    
    body_data = json.loads(event.get('body', '{}'))
    recipient_email = body_data.get('email')
    order_id = body_data.get('orderId')
    customer_name = body_data.get('name')
    tickets = body_data.get('tickets', [])
    total_price = body_data.get('totalPrice')
    
    if not recipient_email or not order_id:
        return {
            'statusCode': 400,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': 'Email and orderId are required'})
        }
    
    smtp_host = os.environ.get('SMTP_HOST')
    smtp_port = int(os.environ.get('SMTP_PORT', '587'))
    smtp_user = os.environ.get('SMTP_USER')
    smtp_password = os.environ.get('SMTP_PASSWORD')
    
    if not all([smtp_host, smtp_port, smtp_user, smtp_password]):
        return {
            'statusCode': 500,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': 'SMTP settings not configured'})
        }
    
    message = MIMEMultipart('alternative')
    message['Subject'] = f'–í–∞—à–∏ –±–∏–ª–µ—Ç—ã - –ó–∞–∫–∞–∑ {order_id}'
    message['From'] = smtp_user
    message['To'] = recipient_email
    
    tickets_html = ''
    for ticket in tickets:
        tickets_html += f'''
        <tr>
            <td style="padding: 10px; border-bottom: 1px solid #eee;">{ticket.get('event')}</td>
            <td style="padding: 10px; border-bottom: 1px solid #eee;">{ticket.get('date')}</td>
            <td style="padding: 10px; border-bottom: 1px solid #eee;">{ticket.get('venue')}</td>
            <td style="padding: 10px; border-bottom: 1px solid #eee; text-align: right;">{ticket.get('quantity')} —à—Ç.</td>
            <td style="padding: 10px; border-bottom: 1px solid #eee; text-align: right;">{ticket.get('price') * ticket.get('quantity')} ‚ÇΩ</td>
        </tr>
        '''
    
    html_content = f'''
    <html>
    <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
        <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
            <h1 style="color: #4F46E5;">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!</h1>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {customer_name}!</p>
            <p>–í–∞—à –∑–∞–∫–∞–∑ <strong>{order_id}</strong> —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∏ –æ–ø–ª–∞—á–µ–Ω.</p>
            
            <h2 style="color: #4F46E5; margin-top: 30px;">–í–∞—à–∏ –±–∏–ª–µ—Ç—ã:</h2>
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
                <thead>
                    <tr style="background-color: #f3f4f6;">
                        <th style="padding: 10px; text-align: left;">–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</th>
                        <th style="padding: 10px; text-align: left;">–î–∞—Ç–∞</th>
                        <th style="padding: 10px; text-align: left;">–ú–µ—Å—Ç–æ</th>
                        <th style="padding: 10px; text-align: right;">–ö–æ–ª-–≤–æ</th>
                        <th style="padding: 10px; text-align: right;">–°—É–º–º–∞</th>
                    </tr>
                </thead>
                <tbody>
                    {tickets_html}
                </tbody>
                <tfoot>
                    <tr style="font-weight: bold; background-color: #f9fafb;">
                        <td colspan="4" style="padding: 15px; text-align: right;">–ò—Ç–æ–≥–æ:</td>
                        <td style="padding: 15px; text-align: right; color: #4F46E5; font-size: 18px;">{total_price} ‚ÇΩ</td>
                    </tr>
                </tfoot>
            </table>
            
            <div style="background-color: #FEF3C7; padding: 15px; border-radius: 8px; margin: 20px 0;">
                <p style="margin: 0;"><strong>üì± –í–∞–∂–Ω–æ:</strong> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. –î–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞.</p>
            </div>
            
            <p>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–µ—Ä–µ–∑ —á–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ.</p>
            
            <p style="color: #6B7280; font-size: 14px; margin-top: 40px;">
                –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            </p>
        </div>
    </body>
    </html>
    '''
    
    html_part = MIMEText(html_content, 'html')
    message.attach(html_part)
    
    try:
        server = smtplib.SMTP(smtp_host, smtp_port)
        server.starttls()
        server.login(smtp_user, smtp_password)
        server.send_message(message)
        server.quit()
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': f'Failed to send email: {str(e)}'})
        }
    
    return {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*'
        },
        'isBase64Encoded': False,
        'body': json.dumps({'success': True, 'message': 'Email sent successfully'})
    }